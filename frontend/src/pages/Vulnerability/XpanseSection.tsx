import React from 'react';
import {
  Grid,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableRow,
  Typography
} from '@mui/material';
import { tableCellClasses } from '@mui/material/TableCell';

// TODO: Remove and update to vulnerability data and format once it is available.
const testXpanseData = {
  firstObserved: 'Jun 04 2024',
  lastObserved: 'Jun 05 2024',
  ipv4Address: '1000.00.00.00',
  portNum: '10000',
  portProtocol: 'TCP',
  httpPath: '/',
  remediation:
    // "1. Verify backported versions requires system access and cannot be accurately done from the Internet, it is recommended to confirm vulnerabilities on the system through a change log or other means.\n2. Outdated versions may no longer get security updates on a regular basis and are prime targets for attackers. It is recommended to upgrade to the latest version of Apache Web Server and apply latest security updates.This can be done via [https://httpd.apache.org/download.cgi](https://httpd.apache.org/download.cgi).\n3. Ensure all files outside the document root are secured with 'require all denied' in the server's configuration. Details on how to do so can be found at [https://httpd.apache.org/docs/2.4/misc/security_tips.html](https://httpd.apache.org/docs/2.4/misc/security_tips.html)."
    'OpenSSH versions under 9.3 allow for methods of remote code execution, privilege escalation, information disclosure and modification, as well as denial of service. When using OpenSSH ensure the following:\n\n1. Backported versions require system access and cannot be done accurately from the Internet, it is recommended to verify vulnerabilities on the system through a change log or other means.\n2. Outdated versions may no longer get security updates on a regular basis and are prime targets for attackers. It is recommended to upgrade to a supported version of OpenSSH and apply latest security updates. Latest versions can be found at [https://www.openssh.com/openbsd.html](https://www.openssh.com/openbsd.html).'
};

const parseTextToJSX = (text: string) => {
  const lines = text.split('\n');
  return lines.map((line, index) => {
    const parts = line.split(/(\[.*?\]\(.*?\))/g).map((part, i) => {
      const match = part.match(/\[(.*?)\]\((.*?)\)/);
      if (match) {
        return (
          <a key={i} href={match[2]} target="_blank" rel="noopener noreferrer">
            {match[1]}
          </a>
        );
      }
      return part;
    });
    return (
      <Typography variant="body1" gutterBottom mt={2} key={index}>
        {parts}
      </Typography>
    );
  });
};

export const XpanseSection: React.FC = () => {
  return (
    <Grid container sx={{ backgroundColor: 'white' }}>
      <Grid item xs={12} sm={6} p={2}>
        <Typography variant="h6" gutterBottom mt={2}>
          Alert Policy Description
        </Typography>
        <Typography variant="body2" gutterBottom mt={2}>
          This issue flags all Eclipse Jetty web servers with versions xx, xx,
          or xx. These versions of Jetty web server have multiple CVEs
          associated with them with impacts ranging from denial of service to
          local privilege escalation.
        </Typography>
        <Typography variant="h6" gutterBottom mt={2}>
          Alert Evidence
        </Typography>
        <TableContainer>
          <Table size="small">
            <TableBody>
              <TableRow>
                <TableCell component="th" scope="row">
                  First Observed
                </TableCell>
                <TableCell scope="row">
                  {testXpanseData.firstObserved}
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row">
                  Last Observed
                </TableCell>
                <TableCell scope="row">{testXpanseData.lastObserved}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row">
                  IPv4 Address
                </TableCell>
                <TableCell scope="row">{testXpanseData.ipv4Address}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row">
                  Port Number
                </TableCell>
                <TableCell scope="row">{testXpanseData.portNum}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row">
                  Port Protocol
                </TableCell>
                <TableCell scope="row">{testXpanseData.portProtocol}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row">
                  HTTP Path
                </TableCell>
                <TableCell scope="row">{testXpanseData.httpPath}</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
        <Typography variant="body2" mt={1} ml={2}>
          Certificate
        </Typography>
        <TableContainer>
          <Table
            size="small"
            sx={{
              [`& .${tableCellClasses.root}`]: { borderBottom: 'none' }
            }}
          >
            <TableBody>
              <TableRow>
                <TableCell
                  component="th"
                  scope="row"
                  align="right"
                  sx={{ width: 150 }}
                >
                  Subject Name
                </TableCell>
                <TableCell scope="row" align="left">
                  localhost.localdomain
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row" align="right">
                  Issuer Name
                </TableCell>
                <TableCell component="th" scope="row">
                  localhost.localdomain
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row" align="right">
                  Serial Number
                </TableCell>
                <TableCell scope="row">
                  123456789012345678901234567890
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row" align="right">
                  Valid Not Before
                </TableCell>
                <TableCell scope="row">Apr 05 2024</TableCell>
              </TableRow>
              <TableRow>
                <TableCell component="th" scope="row" align="right">
                  Valid Not After
                </TableCell>
                <TableCell scope="row">Apr 03 2034</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
      </Grid>
      <Grid item xs={12} sm={6} p={2}>
        <Typography variant="h6" gutterBottom mt={2}>
          How to Remediate
        </Typography>
        {parseTextToJSX(testXpanseData.remediation)}
      </Grid>
    </Grid>
  );
};
