---

scheduler:
  handler: src/xfd_django/xfd_api/tasks/scheduler.handler
  timeout: 900
  events:
    - schedule: rate(5 minutes)
  reservedConcurrency: 1
  memorySize: 4096

syncdb:
  timeout: 900
  handler: src/xfd_django/xfd_api/tasks/run_syncdb.handler

pesyncdb:
  timeout: 900
  handler: src/tasks/pesyncdb.handler

bastion:
  timeout: 900
  handler: src/xfd_django/xfd_api/tasks/bastion.handler

makeGlobalAdmin:
  handler: src/tasks/makeGlobalAdmin.handler

checkUserExpiration:
  timeout: 300
  handler: src/tasks/checkUserExpiration.handler
  events:
    - schedule: cron(0 0 * * ? *)  # Runs every day at midnight

scanExecution:
  timeout: 900  # 15 minutes
  handler: src/tasks/scanExecution.handler
  memorySize: 4096

updateScanTaskStatus:
  handler: src/tasks/updateScanTaskStatus.handler
  events:
    - eventBridge:
        name: ${self:provider.stage}-updateScanTaskStatus
        pattern:
          source:
            - aws.ecs
          detail-type:
            - ECS Task State Change
          detail:
            clusterArn:
              - ${file(env.yml):${self:provider.stage}-ecs-cluster, ''}

# populateServiceStatsElasticache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_ServicesStatscache
#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populatePortStatsElasticache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_PortsStatscache
#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populateNumVulnsStatsElasticache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_NumVulnerabilitiesStatscache
#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populateLatestVulnsStatsElasticache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_LatestVulnerabilitiesCache
#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populateMostCommonVulnerabilityElasticache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_MostCommonVulnerabilitiesCache

#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populateSeverityCountsCache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_SeverityCountsCache

#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**

# populateByOrgCache:
#   handler: src/xfd_django/xfd_api/tasks/elasticache_tasks.populate_VulnerabilitiesByOrgCache

#   runtime: python3.11
#   environment:
#     DJANGO_SETTINGS_MODULE: xfd_django.settings
#     REDIS_ENDPOINT: ${env:ELASTICACHE_ENDPOINT}
#   events:
#     - schedule:
#         rate: ron(0 0 * * ? *)  # This triggers the function every day it mightnight
#         enabled: true
#   package:
#     include:
#       - src/**
#       - requirements.txt
#     exclude:
#       - node_modules/**
