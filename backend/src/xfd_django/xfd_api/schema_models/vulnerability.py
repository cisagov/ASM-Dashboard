"""Vulnerability schemas."""
# Third-Party Libraries
# from pydantic.types import UUID1, UUID
# Standard Python Libraries
from datetime import datetime
from typing import Any, Optional
from uuid import UUID

# Third-Party Libraries
from pydantic import BaseModel, Json


class Vulnerability(BaseModel):
    """Vulnerability schema."""

    id: UUID
    createdAt: datetime
    updatedAt: datetime
    lastSeen: datetime
    title: Optional[str]
    cve: Optional[str]
    cwe: Optional[str]
    cpe: Optional[str]
    description: Optional[str]
    references: Json[Any]
    cvss: float
    severity: Optional[str]
    needsPopulation: bool
    state: Optional[str]
    substate: Optional[str]
    source: Optional[str]
    notes: Optional[str]
    actions: Json[Any]
    structuredData: Json[Any]
    isKev: bool
    domainId: UUID
    serviceId: UUID

    class Config:
        from_attributes = True


class VulnerabilityFilters(BaseModel):
    """VulnerabilityFilters schema."""

    id: Optional[UUID]
    title: Optional[str]
    domain: Optional[str]
    severity: Optional[str]
    cpe: Optional[str]
    state: Optional[str]
    substate: Optional[str]
    organization: Optional[UUID]
    tag: Optional[UUID]
    isKev: Optional[bool]

    class Config:
        from_attributes = True


class VulnerabilitySearch(BaseModel):
    """VulnerabilitySearch schema."""

    page: int
    sort: Optional[str]
    order: str
    filters: Optional[VulnerabilityFilters]
    pageSize: Optional[int]
    groupBy: Optional[str]

    class Config:
        from_attributes = True


class VulnerabilityStat(BaseModel):
    """VulnerabilityStat schema."""

    id: str
    value: int

    class Config:
        from_attributes = True
